{"version":3,"sources":["webpack:///path---certbot-amazon-eaf70a63e32b23fc91c2.js","webpack:///./.cache/json/certbot-amazon.json"],"names":["webpackJsonp","502","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug","previous","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,0BAAAC,OAAA,eAAyDC,gBAAmBC,GAAA,gGAAAC,KAAA,uxDAAwwDC,aAAwKL,MAAA,2DAAAM,KAAA,oBAA6FC,aAAgBC,KAAA,mBAAAC,UAAA,EAAAC,MAAA","file":"path---certbot-amazon-eaf70a63e32b23fc91c2.js","sourcesContent":["webpackJsonp([178180063190343],{\n\n/***/ 502:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Блог о программировании\",\"author\":\"Лукин Егор\"}},\"markdownRemark\":{\"id\":\"/home/egor/projects/blog/src/pages/certbot-amazon/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>На днях возникла задача настроить https протокол на сервере Amazon EC2. Первый делом на ум приходит сервис <a href=\\\"https://letsencrypt.org/\\\">letsencrypt</a>.\\nСледуя простой инструкции, скачиваем скрипт <a href=\\\"https://certbot.eff.org/\\\">certbot</a> и делаем его исполняемым:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">wget https://dl.eff.org/certbot-auto\\nchmod a+x certbot-auto</code></pre>\\n      </div>\\n<p>Однако, после запуска возникает следующая ошибка:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">ImportError: No module named cryptography.hazmat.bindings.openssl.binding</code></pre>\\n      </div>\\n<p>Наш скрипт зависит от сторонних питоновских библиотек и одной из них нe оказалось на хосте.\\nОдним из решением данной проблемы является запуск certbot’а в отдельном docker-контейнере.</p>\\n<p>На просторах интернета был найден готовый <a href=\\\"https://github.com/pslobo/dockerized-certbot/blob/master/Dockerfile\\\">Dockerfile</a>, на основе Alpine Linux.\\nСкачиваем и cобираем контейнер:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">git clone https://github.com/pslobo/dockerized-certbot\\ncd dockerized-certbot\\ndocker build -t certbot .</code></pre>\\n      </div>\\n<p>Затем запускаем собранный контейнер с нужными параметрами:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">docker run -it --rm \\\\\\n    -p 443:443 \\\\\\n    -p 80:80 \\\\\\n    -v /etc/letsencrypt:/etc/letsencrypt \\\\\\n    certbot certonly --standalone -t -m {mail} -d {domen}</code></pre>\\n      </div>\\n<p>Готово. Сертификаты доступны в директории <code>/etc/letsencrypt</code> и можно переходить к настройке web-сервера.</p>\",\"frontmatter\":{\"title\":\"Получение ssl-сертификата с помощью letsencrypt и docker\",\"date\":\"March 18, 2018\"}}},\"pathContext\":{\"slug\":\"/certbot-amazon/\",\"previous\":false,\"next\":false}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certbot-amazon-eaf70a63e32b23fc91c2.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Блог о программировании\",\"author\":\"Лукин Егор\"}},\"markdownRemark\":{\"id\":\"/home/egor/projects/blog/src/pages/certbot-amazon/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>На днях возникла задача настроить https протокол на сервере Amazon EC2. Первый делом на ум приходит сервис <a href=\\\"https://letsencrypt.org/\\\">letsencrypt</a>.\\nСледуя простой инструкции, скачиваем скрипт <a href=\\\"https://certbot.eff.org/\\\">certbot</a> и делаем его исполняемым:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">wget https://dl.eff.org/certbot-auto\\nchmod a+x certbot-auto</code></pre>\\n      </div>\\n<p>Однако, после запуска возникает следующая ошибка:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">ImportError: No module named cryptography.hazmat.bindings.openssl.binding</code></pre>\\n      </div>\\n<p>Наш скрипт зависит от сторонних питоновских библиотек и одной из них нe оказалось на хосте.\\nОдним из решением данной проблемы является запуск certbot’а в отдельном docker-контейнере.</p>\\n<p>На просторах интернета был найден готовый <a href=\\\"https://github.com/pslobo/dockerized-certbot/blob/master/Dockerfile\\\">Dockerfile</a>, на основе Alpine Linux.\\nСкачиваем и cобираем контейнер:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">git clone https://github.com/pslobo/dockerized-certbot\\ncd dockerized-certbot\\ndocker build -t certbot .</code></pre>\\n      </div>\\n<p>Затем запускаем собранный контейнер с нужными параметрами:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code class=\\\"language-none\\\">docker run -it --rm \\\\\\n    -p 443:443 \\\\\\n    -p 80:80 \\\\\\n    -v /etc/letsencrypt:/etc/letsencrypt \\\\\\n    certbot certonly --standalone -t -m {mail} -d {domen}</code></pre>\\n      </div>\\n<p>Готово. Сертификаты доступны в директории <code>/etc/letsencrypt</code> и можно переходить к настройке web-сервера.</p>\",\"frontmatter\":{\"title\":\"Получение ssl-сертификата с помощью letsencrypt и docker\",\"date\":\"March 18, 2018\"}}},\"pathContext\":{\"slug\":\"/certbot-amazon/\",\"previous\":false,\"next\":false}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certbot-amazon.json\n// module id = 502\n// module chunks = 178180063190343"],"sourceRoot":""}